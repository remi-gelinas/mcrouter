name: CI

env:
  CACHIX_CACHE_NAME: remi-gelinas-mcrouter
  NIX_INSTALL_URL: https://github.com/nix-community/nix-unstable-installer/releases/download/nix-2.17.0pre20230609_03f9ff6/install
  EXTRA_NIX_CONFIG: |
    experimental-features = nix-command flakes
    substituters = https://cache.nixos.org/ https://nix-community.cachix.org https://remi-gelinas-mcrouter.cachix.org
    trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs= remi-gelinas-mcrouter.cachix.org-1:ZBe+WPJ0eWuRfeXR4FREkU/22iKabCgz+wMr8TgPeo8=


on:
  pull_request:
    branches:
      - trunk
  merge_group:
    branches:
      - trunk

concurrency:
  group: ${{ github.repository }}-${{ github.head_ref || github.sha }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  alejandra:
    name: Alejandra
    runs-on: ubuntu-latest
    steps:
      - uses: cachix/install-nix-action@v22
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
          install_url: ${{ env.NIX_INSTALL_URL }}
          extra_nix_config: "${{ env.EXTRA_NIX_CONFIG }}"
      - uses: actions/checkout@v3.5.3
      - name: Check formatting
        run: |
          nix-shell --arg packages 'pkgs: [ pkgs.alejandra ]' --run 'alejandra --check .'

  statix:
    name: Statix
    runs-on: ubuntu-latest
    steps:
      - uses: cachix/install-nix-action@v22
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
          install_url: ${{ env.NIX_INSTALL_URL }}
          extra_nix_config: "${{ env.EXTRA_NIX_CONFIG }}"
      - uses: actions/checkout@v3.5.3
      - name: Static code analysis
        run: |
          nix-shell --arg packages 'pkgs: [ pkgs.statix ]' --run 'statix check .'

  deadnix:
    name: Deadnix
    runs-on: ubuntu-latest
    steps:
      - uses: cachix/install-nix-action@v22
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
          install_url: ${{ env.NIX_INSTALL_URL }}
          extra_nix_config: "${{ env.EXTRA_NIX_CONFIG }}"
      - uses: actions/checkout@v3.5.3
      - name: Check for dead code
        run: |
          nix-shell --arg packages 'pkgs: [ pkgs.deadnix ]' --run 'deadnix -f --exclude ./_sources/generated.nix'

  nixpkgs:
    name: Nixpkgs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.5.3
      - name: Check nixpkgs inputs
        uses: DeterminateSystems/flake-checker-action@v5
        with:
          send-statistics: false

  mcrouter-amd:
    runs-on: ubuntu-latest
    steps:
      - uses: cachix/install-nix-action@v22
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
          install_url: ${{ env.NIX_INSTALL_URL }}
          extra_nix_config: "${{ env.EXTRA_NIX_CONFIG }}"
      - uses: cachix/cachix-action@v12
        with:
          name: '${{ env.CACHIX_CACHE_NAME }}'
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - uses: actions/checkout@v3.5.3
      - name: Build mcrouter
        run: nix build -L .#packages.mcrouter

  mcrouter-arm:
    runs-on: ubuntu-latest
    steps:
      - uses: cachix/install-nix-action@v22
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
          install_url: ${{ env.NIX_INSTALL_URL }}
          extra_nix_config: "${{ env.EXTRA_NIX_CONFIG }}"
      - uses: cachix/cachix-action@v12
        with:
          name: '${{ env.CACHIX_CACHE_NAME }}'
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - uses: actions/checkout@v3.5.3
      - name: Build mcrouter
        run: nix build -L .#packages.mcrouter
